package chap03.ex02;

public class BitWiseOperator2 {

	public static void main(String[] args) {
//		2.비트 연산자 : &(AND) , |(OR) , ^(XOR) , ~(NOT)
//			-2진법으로 변환해서 연산됨.
		
		System.out.println("& (AND) ================ ");
////	& (AND) : 모든 비트가 1일 때 1.
//				0 & 0 = 0
//				0 & 1 = 0
//				1 & 0 = 0
//				1 & 1 = 1
		System.out.println( 3 & 10 );
//		10진수 3은 2진법으로 	: 0011
//		10진수 10은 2진법으로 	: 1010	
//		AND 연산				: 0010(2진수) => 2(10진수)
		
		
		System.out.println("|(OR) ====================");
//		|(OR) : 1개라도 1이 있으면 결과가 1.
//			0 | 0 = 0
//			0 | 1 = 1
//			1 | 0 = 1
//			1 | 1 = 1
		System.out.println( 3 | 10 ); // 11
//		10진수 3은 2진법으로 	: 0011
//		10진수 10은 2진법으로 	: 1010
//		OR					: 1011(2진수) => 11(10진수)
		
		
		System.out.println("^(XOR) ==================");
//		^(XOR) : 두 비트가 같을 때 : 0 , 두 비트가 다른 값일 때 : 1.
//			0 ^ 0 = 0
//			0 ^ 1 = 1
//			1 ^ 0 = 1
//			1 ^ 1 = 0
		System.out.println( 3 ^ 10 ); //9
//		10진수 3은 2진법으로 	: 0011
//		10진수 10은 2진법으로 	: 1010
//		XOR					: 1001(2진수) => 9(10진수)
		
		
		System.out.println("~(NOT) ======================");
//		~(NOT) : 0일 때 1 , 1일 때 0.
//			~ 1 = 0
//			~ 0 = 1
		System.out.println( ~3 ); // -4
//		10진수 3은 2진법으로 	: 0011
//		NOT : 111111111111111111111111111111111111111111111111111111111111 1100(2진수)
//		NOT					: -4(10진수)
		System.out.println( ~10 ); // -11
//		10진수 10은 2진법으로 	: 1010
//		NOT : 111111111111111111111111111111111111111111111111111111111111 0101(2진수)
//		NOT					: -11(10진수)
		
		
		
		
	}

}
